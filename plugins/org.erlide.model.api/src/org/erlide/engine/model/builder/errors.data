[
 {parser_syntax_error, "syntax error before: ~"},

 {compiler_no_native_support, "this system is not configured for native-code compilation."},
 {compiler_no_crypto, "this system is not configured with crypto support."},
 {compiler_bad_crypto_key, "invalid crypto key."},
 {compiler_no_crypto_key, "no crypto key supplied."},
 {compiler_native, "native-code compilation failed with reason: ~."},
 {compiler_native_crash, "native-code compilation crashed with reason: ~.\n~\n"},
 {compiler_open, "open error '~'"},
 {compiler_write_error, "error writing file"},
 {compiler_rename, "failed to rename ~ to ~: ~"},
 {compiler_delete, "failed to delete file ~: ~"},
 {compiler_delete_temp, "failed to delete temporary file ~: ~"},
 {compiler_parse_transform, "error in parse transform '~': ~"},
 {compiler_undef_parse_transform, "undefined parse transform '~'"},
 {compiler_core_transform, "error in core transform '~': ~"},
 {compiler_crash, "internal error in ~\ncrash reason: ~"},
 {compiler_bad_return, "internal error in ~\nbad return value: ~"},
 {compiler_module_name, "Module name '~' does not match file name '~'"},
 {compiler_module_name_1, "declared module name '~' doesn't match file name '~'"},
 {compiler_reparsing_invalid_unicode, "Non-UTF-8 character(s) detected, but no encoding declared. Encode the file in UTF-8 or add \"%% coding: latin-1\" at the beginning of the file. Retrying with latin-1 encoding."},

 {epp_cannot_parse, "cannot parse file, giving up"},
 {epp_bad, "badly formed '~'"},
 {epp_missing_parenthesis, "badly formed define: missing closing right parenthesis"},
 {epp_premature_end, "premature end"},
 {epp_call, "illegal macro call '~'"},
 {epp_undefined_macro_2, "undefined macro '~/~'"},
 {epp_undefined_macro_1, "undefined macro '~'"},
 {epp_depth, "~ too deep"},
 {epp_mismatch, "argument mismatch for macro '~'"},
 {epp_arg_error, "badly formed argument for macro '~'"},
 {epp_redefine, "redefining macro '~'"},
 {epp_redefine_predef, "redefining predefined macro '~'"},
 {epp_circular_macro_2, "circular macro '~/~'"},
 {epp_circular_macro_1, "circular macro '~'"},
 {epp_include, "can't find include ~ \"~\""},
 {epp_illegal, "~ '-~'"},
 {epp_nyi, "not yet implemented '~'"},

 {core_eval_failure, "this expression will fail with a '~' exception"},
 {core_embedded_binary_size, "binary construction will fail with a 'badarg' exception (field size for binary/bitstring greater than actual size)"},
 {core_embedded_unit, "binary construction will fail with a 'badarg' exception (size ~ cannot be evenly divided by unit ~)"},
 {core_bad_unicode, "binary construction will fail with a 'badarg' exception (invalid Unicode code point in a utf8/utf16/utf32 segment)"},
 {core_nomatch_shadow_line, "this clause cannot match because a previous clause at line ~ always matches"},
 {core_nomatch_shadow, "this clause cannot match because a previous clause always matches"},
 {core_nomatch_guard, "the guard for this clause evaluates to 'false'"},
 {core_no_clause_match, "no clause will ever match"},
 {core_nomatch_clause_type, "this clause cannot match because of different types/sizes"},
 {core_result_ignored, "the result of the expression is ignored (suppress the warning by assigning the expression to the _ variable)"},
 {core_useless_building, "a term is constructed, but never used"},
 {core_no_effect_op, "use of operator ~ has no effect"},
 {core_no_effect_remote, "the call to ~:~/~ has no effect"},
 {core_no_effect, "the call to ~/~ has no effect"},

 {lint_singleton_typevar, "type variable ~ is only used once (is unbound)"},
 {lint_bad_export_type, "bad export_type declaration"},
 {lint_duplicated_export_type, "type ~/~ already exported"},
 {lint_undefined_type, "type ~(~) undefined"},
 {lint_unused_type, "type ~(~) is unused"},
 {lint_new_builtin_type, "type ~(~) is a new builtin type its (re)definition is allowed only until the next release"},
 {lint_builtin_type, "type ~(~) is a builtin type it cannot be redefined"},
 {lint_renamed_type, "type ~() is now called ~() please use the new name instead"},
 {lint_redefine_type, "type ~(~) already defined"},
 {lint_type_syntax, "bad ~ type"},
 {lint_redefine_spec, "spec for ~:~/~ already defined"},
 {lint_redefine_callback, "callback ~:~/~ already defined"},
 {lint_spec_fun_undefined, "spec for undefined function ~:~/~"},
 {lint_missing_spec, "missing specification for function ~/~"},
 {lint_spec_wrong_arity, "spec has the wrong arity"},
 {lint_callback_wrong_arity, "callback has the wrong arity"},
 {lint_deprecated_builtin_type_2, "type ~/~ is deprecated and will be removed in ~ use ~:~/~ or preferably ~:~/~"},
 {lint_deprecated_builtin_type, "type ~/~ is deprecated and will be removed in ~ use ~:~/~"},
 {lint_not_exported_opaque, "opaque type ~(~) is not exported"},
 {lint_underspecified_opaque, "opaque type ~(~) is underspecified and therefore meaningless"},

 {lint_undefined_module, "no module definition"},
 {lint_redefine_module, "redefining module"},
 {lint_pmod_unsupported, "parameterized modules are no longer supported"},

 {lint_invalid_call, "invalid function call"},
 {lint_invalid_record, "invalid record expression"},

 {lint_attribute, "attribute '~' after function definitions"},
 {lint_missing_qlc_hrl, "qlc:q/~ called, but \"qlc.hrl\" not included"},
 {lint_redefine_import, "function ~/~ already imported from ~"},
 {lint_bad_inline, "inlined function ~/~ undefined"},
 {lint_invalid_deprecated, "badly formed deprecated attribute ~"},
 {lint_bad_deprecated, "deprecated function ~/~ undefined or not exported"},
 {lint_disallowed_nowarn_bif_clash, "compile directive nowarn_bif_clash is no longer allowed, - use explicit module names or -compile({no_auto_import, [F/A]})"},
 {lint_bad_nowarn_deprecated_function, "~:~/~ is not a deprecated function"},
 {lint_bad_on_load, "badly formed on_load attribute: ~"},
 {lint_multiple_on_loads, "more than one on_load attribute"},
 {lint_bad_on_load_arity, "function ~/~ has wrong arity (must be 0)"},

 {lint_export_all, "export_all flag enabled - all functions will be exported"},
 {lint_duplicated_export, "function ~/~ already exported"},
 {lint_unused_import, "import ~:~/~ is unused"},
 {lint_undefined_function, "function ~/~ undefined"},
 {lint_redefine_function, "function ~/~ already defined"},
 {lint_define_import, "defining imported function ~/~"},
 {lint_unused_function, "function ~/~ is unused"},
 {lint_call_to_redefined_bif, "ambiguous call of overridden auto-imported BIF ~/~\n - use erlang:~/~ or \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},
 {lint_call_to_redefined_old_bif, "ambiguous call of overridden pre R14 auto-imported BIF ~/~\n - use erlang:~/~ or \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},
 {lint_redefine_old_bif_import, "import directive overrides pre R14 auto-imported BIF ~/~\n - use \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},
 {lint_redefine_bif_import, "import directive overrides auto-imported BIF ~/~\n - use \"-compile({no_auto_import,[~/~]}).\" to resolve name clash"},

 {lint_deprecated, "~ is deprecated and will be removed in ~ use ~"},
 {lint_deprecated_generic, "~:~/~: ~"},
 {lint_removed, "call to ~ will fail, since it was removed in ~ use ~"},
 {lint_removed_generic, "~: ~"},
 {lint_obsolete_guard, "~/~ obsolete"},
 {lint_too_many_arguments, "too many arguments (~) - maximum allowed is 255"},

 {lint_illegal_pattern, "illegal pattern"},
 {lint_illegal_map_key_variable, "illegal use of variable ~ in map"},
 {lint_illegal_bin_pattern, "binary patterns cannot be matched in parallel using '='"},
 {lint_illegal_expr, "illegal expression"},
 {lint_illegal_guard_local_call, "call to local/imported function ~/~ is illegal in guard"},
 {lint_illegal_guard_expr, "illegal guard expression"},

 {lint_illegal_map_construction, "only association operators '=>' are allowed in map construction"},

 {lint_undefined_record, "record ~ undefined"},
 {lint_redefine_record, "record ~ already defined"},
 {lint_redefine_field, "field ~ already defined in record ~"},
 {lint_undefined_field, "field ~ undefined in record ~"},
 {lint_illegal_record_info, "illegal record info"},
 {lint_field_name_is_variable, "field ~ is not an atom or _ in record ~"},
 {lint_wildcard_in_update, "meaningless use of _ in update of record ~"},
 {lint_unused_record, "record ~ is unused"},
 {lint_untyped_record, "record ~ has field(s) without type information"},

 {lint_unbound_var, "variable ~ is unbound"},
 {lint_unsafe_var, "variable ~ unsafe in ~ ~"},
 {lint_exported_var, "variable ~ exported from ~ ~"},
 {lint_shadowed_var, "variable ~ shadowed in ~"},
 {lint_unused_var, "variable ~ is unused"},
 {lint_variable_in_record_def, "variable ~ in record definition"},

 {lint_undefined_bittype, "bit type ~ undefined"},
 {lint_bittype_unit, "a bit unit size must not be specified unless a size is specified too"},
 {lint_illegal_bitsize, "illegal bit size"},
 {lint_unsized_binary_not_at_end, "a binary field without size is only allowed at the end of a binary pattern"},
 {lint_typed_literal_string, "a literal string in a binary pattern must not have a type or a size"},
 {lint_utf_bittype_size_or_unit, "neither size nor unit must be given for segments of type utf8/utf16/utf32"},
 {lint_bad_bitsize, "bad ~ bit size"},
 {lint_unsized_binary_in_bin_gen_pattern, "binary fields without size are not allowed in patterns of bit string generators"},

 {lint_conflicting_behaviours, "conflicting behaviours - callback ~/~ required by both '~' and '~' ~"},
 {lint_undefined_behaviour_func, "undefined callback function ~/~ (behaviour '~')"},
 {lint_undefined_behaviour_callbacks, "behaviour ~ callback functions are undefined"},
 {lint_undefined_behaviour, "behaviour ~ undefined"},
 {lint_ill_defined_behaviour_callbacks, "behaviour ~ callback functions erroneously defined"},
 {lint_behaviour_info, "cannot define callback attibute for ~/~ when behaviour_info is defined"},

 {scan_string, "unterminated ~ starting with ~"},
 {scan_base, "illegal base '~'"},
 {scan_illegal, "illegal ~"},
 {scan_char, "unterminated character"},

 {builder_duplicate_module, "duplicated module name in ~ and ~"},
 {builder_code_clash, "code clash between ~ and ~"}

]

